"use strict";exports.id=197,exports.ids=[197],exports.modules={197:(t,e,i)=>{i.r(e),i.d(e,{default:()=>l});var r=i(147),o=i.n(r),n=i(516),d=function(t,e,i,r){return new(i||(i=Promise))((function(o,n){function d(t){try{l(r.next(t))}catch(t){n(t)}}function s(t){try{l(r.throw(t))}catch(t){n(t)}}function l(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(d,s)}l((r=r.apply(t,e||[])).next())}))};class s extends n.Z{constructor(){super("./api/DB/products.txt"),this.readFile=()=>d(this,void 0,void 0,(function*(){try{return(yield o().promises.readFile(this.filePath,"utf8"))?JSON.parse(yield o().promises.readFile(this.filePath,"utf8")):[]}catch(t){if(-2===t.errno)try{return yield o().promises.writeFile(this.filePath,JSON.stringify([])),[]}catch(t){console.error("Could not create file in such directory. ",t)}else console.log("readFile: ",t);return[]}})),this.writeFile=t=>d(this,void 0,void 0,(function*(){try{yield o().promises.writeFile(this.filePath,JSON.stringify(t))}catch(t){console.log("Method writeFile: ",t)}}))}addProduct(t){return d(this,void 0,void 0,(function*(){try{const e=yield this.readFile(),i=0===e.length?1:Math.max(...e.map((t=>t.id)))+1,r=(new Date).toLocaleString("es-AR");return e.push(Object.assign(Object.assign({},t),{id:i,timestamp:r})),yield this.writeFile(e),i}catch(t){console.log("Method save: ",t)}}))}getAll(){return d(this,void 0,void 0,(function*(){return yield this.readFile()}))}getById(t){var e;return d(this,void 0,void 0,(function*(){try{const i=yield this.readFile();return null!==(e=i.find((e=>e.id===t)))&&void 0!==e?e:{error:"Product not found"}}catch(t){console.log("Method getById: ",t)}return{error:"fetch item method failed"}}))}updateProduct(t,e){return d(this,void 0,void 0,(function*(){try{const i=(yield this.readFile()).map((i=>i.id===t?Object.assign(Object.assign({},i),e):i));yield this.writeFile(i)}catch(t){console.log("Method update: ",t)}}))}deleteProduct(t){return d(this,void 0,void 0,(function*(){try{const e=yield this.readFile(),i=e.filter((e=>e.id!==t));return e.length===i.length?`There is NO product with id= ${t}`:(yield this.writeFile(i),`Product ${t} deleted`)}catch(t){console.log("Method deleteById: ",t)}}))}}const l=new s}};